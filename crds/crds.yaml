apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: builds.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: Build
    listKind: BuildList
    plural: builds
    singular: build
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Build is the Schema for the builds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BuildSpec defines the desired state of Build
            properties:
              builderImage:
                type: string
              builderServiceAccount:
                type: string
              customCASecretName:
                description: DEPRECATED - This attribute is being replaced with other
                  configuration options.
                type: string
              dockerfileURL:
                description: DEPRECATED - This attribute is unused since Operator
                  ~v1.5.0.
                type: string
              mendixRuntimeVersion:
                description: MendixRuntimeVersion specifies version name which will
                  be used to generate the base image name of the runtime base.
                type: string
              proxySecretName:
                type: string
              registry:
                description: RegistrySpec defines optional registry settings for specific
                  build
                properties:
                  credentials:
                    type: string
                  imageNameTemplate:
                    description: "ImageNameTemplate is the template used to generate
                      the image+tag, if it's not specified in OperatorConfiguration.
                      It's a go template which is used to generate the image name
                      and tag and allows to use both OpenShift-style \"repository
                      per app\" and ECR-style \"tag per app\". \n Available parameters:
                       - uses internal app name.  - uses the
                      current value of the Build CRâ€™s Generation attribute (https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/namespace#generation).
                       - uses the value of `sourceVersion` key from MendixApp
                      CR.  - uses the current UNIX timestamp, with
                      at least millisecond precision.  - uses the current
                      timestamp in the next format: \t\t\t\t\t20211231.081224.789
                      is the next date - 2021-12-31 08:12:24.789. \n Examples: * \"my-ecr-repository:\"
                      (ECR repository called my-ecr-repository, each app will be saved
                      in its own tag) * \"my-ns/\" (OpenShift repository
                      for namespace my-ns, each app will be saved in its own image)
                      * \"my-username/\" (Docker Hub repository for user
                      my-username, each app will be saved in its own image)"
                    type: string
                  pullURL:
                    type: string
                  pushURL:
                    type: string
                  type:
                    description: RegistryType represents the type of docker registry
                    type: string
                type: object
              resources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              runtimeBaseImage:
                description: RuntimeBaseImage it the templatized name of the runtime
                  base image used to build Mendix app images.
                type: string
              sourceURL:
                description: SourceURL specifies the HTTP(S) URL where the app source
                  (e.g. MDA) can be downloaded so that it can be added to the image.
                type: string
              sourceVersion:
                description: SourceVersion specifies the version of the source. In
                  most cases this will be provided by Portunus. Can be used as templated
                  parameter of `imageNameTemplate`.
                type: string
              trust:
                description: Trust specifies the trust certificates CA's.
                properties:
                  customCASecretName:
                    description: CustomCASecretName the secret's name that contains
                      custom.crt with additional trusted Certificate Authorities.
                    type: string
                type: object
            required:
            - mendixRuntimeVersion
            - sourceURL
            type: object
          status:
            description: BuildStatus defines the observed state of Build
            properties:
              buildStatus:
                description: PodPhase is a label for the condition of a pod at the
                  current time.
                type: string
              image:
                type: string
              sourceURL:
                type: string
              state:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_endpoints.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: endpoints.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Endpoint is the Schema for the endpoints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EndpointSpec defines the desired state of Endpoint
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations specifies the annotations which should be
                  added to the Endpoint's Ingress or OpenShift Route.
                type: object
              appURL:
                description: AppURL specifies a custom hostname to be used for the
                  Mendix App. If left empty, a domain will be automatically generated
                  based on the Endpoint CR name and DefaultDomain.
                type: string
              defaultDomain:
                description: DefaultDomain will be used to generate an AppURL if no
                  AppURL is provided. It's not used when the AppURL is not empty.
                  It's can be left blank for OpenShift - in that case, the default
                  OpenShift apps domain will be used.
                type: string
              ingressClassName:
                description: IngressClassName ingresses class name. Based on OperatorConfiguration
                  CRD and MendixApp CRD. Works only with Type == EndpointTypeIngress.
                type: string
              ingressPath:
                description: IngressPath is path of ingress. Based on OperatorConfiguration
                  CRD and MendixApp CRD.
                type: string
              ingressPathType:
                description: IngressPathType is pathType of ingress. Based on OperatorConfiguration
                  CRD and MendixApp CRD.
                type: string
              serviceAnnotations:
                additionalProperties:
                  type: string
                description: ServiceAnnotations annotations for the service. Supports
                  templates.
                type: object
              servicePorts:
                description: ServicePorts opens specified ports in service with target
                  port "mendix-app". If empty uses 8080 port.
                items:
                  format: int32
                  type: integer
                type: array
              serviceType:
                description: ServiceType is service type. By default it equals to
                  "ClusterIP". Also supports "LoadBalancer".
                type: string
              tls:
                description: TLS configures the endpoint's TLS.
                properties:
                  certificate:
                    description: Certificate specifies the TLS encryption certificate
                      value in plaintext PEM format. Requires Key to be provided as
                      well. Cannot be used together with SecretName.
                    type: string
                  enableTLS:
                    description: EnableTLS specifies if TLS should be enabled.
                    type: boolean
                  key:
                    description: Key specifies the TLS encryption private key value
                      in plaintext PEM format. Requires Certificate to be provided
                      as well. Cannot be used together with SecretName.
                    type: string
                  secretName:
                    description: SecretName specifies the name of the secret containing
                      TLS keys. Can be left empty to use the default secret, or to
                      provide the secret through Key and Certificate.
                    type: string
                required:
                - enableTLS
                type: object
              type:
                description: 'Type specifies the Endpoint type. TODO: omitempty is
                  used to make this field non-optional for compatibility with previous
                  versions of the Operator.'
                type: string
            type: object
          status:
            description: EndpointStatus defines the observed state of Endpoint
            properties:
              appURL:
                type: string
              state:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_mendixapps.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: mendixapps.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: MendixApp
    listKind: MendixAppList
    plural: mendixapps
    singular: mendixapp
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MendixApp is the Schema for the mendixapps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MendixAppSpec defines the desired state of MendixApp
            properties:
              appURL:
                description: AppURL specifies the URL where the app should be made
                  available.
                type: string
              database:
                description: Database specifies the database storage instance configuration.
                properties:
                  serviceClass:
                    type: string
                  servicePlan:
                    type: string
                type: object
              endpointAnnotations:
                additionalProperties:
                  type: string
                description: EndpointAnnotations is annotations for endpoint (ingress/route).
                  Merges with annotations from EndpointConfigurationSpec CR, EndpointConfigurationSpec
                  has lower priority.
                type: object
              ingressClassName:
                description: IngressClassName specifies IngressClassName for ingress.
                type: string
              ingressPath:
                description: IngressPath ingress path value. By default (or when empty
                  and OperatorConfiguration is empty as well), it uses "/" value.
                  E.g. Google Cloud requires "/*" value. Overwrites value from OperatorConfiguration
                  CRD.
                type: string
              ingressPathType:
                description: IngressPathType ingress pathType. By default (when OperatorConfiguration
                  is not specified as well), it's empty and not presented in the ingress
                  object. Overwrites value from OperatorConfiguration CRD.
                type: string
              mendixRuntimeVersion:
                description: MendixRuntimeVersion specifies version name which will
                  be used to generate the base image name of the runtime base.
                type: string
              replicas:
                description: Replicas sets the number of replicas (pods) to run for
                  the app.
                format: int32
                type: integer
              resources:
                description: Resources specifies the resources for the Mendix app
                  container.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              runtime:
                description: Runtime contains runtime parameters.
                properties:
                  applicationRootURL:
                    description: ApplicationRootURL specifies hostname to be used
                      in the runtime. Generated based on AppURL from the Endpoint
                      CR.
                    type: string
                  clientCertificates:
                    description: ClientCertificates specifies client certificates
                      to be used for TLS (HTTPS) connections.
                    items:
                      description: RuntimeClientCertificate contains details about
                        a client certificate that can be provided to the Mendix Runtime.
                      properties:
                        key:
                          description: Key is the certificate private key, a base64-encoded
                            PKCS12 (.pfx).
                          type: string
                        password:
                          description: Password specifies the password for the key,
                            required by the Mendix Runtime.
                          type: string
                        pinTo:
                          description: PinTo specifies the list of Mendix modules
                            or domain names which this certificate should be pinned
                            to. Leave empty to use this as the default certificate.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - password
                      type: object
                    type: array
                  customConfiguration:
                    description: CustomConfiguration specifies Custom Runtime Settings
                      The values should be provided in JSON format.
                    type: string
                  debuggerPassword:
                    description: DebuggerPassword specifies the password for mendix
                      app debugger password.
                    type: string
                  dtapMode:
                    description: DTAPMode specifies the mode for running the Mendix
                      application (Development, Test, Acceptance, Production). Always
                      set this to P in production environments.
                    type: string
                  environmentVariables:
                    description: EnvironmentVariables allows to specify custom environment
                      variables for the Mendix Runtime container. This can also be
                      used to set Java options by providing in the JAVA_TOOL_OPTIONS
                      environment variable.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  jettyOptions:
                    description: JettyOptions can be used to specify options for the
                      jetty webserver in the Mendix Runtime. The values should be
                      provided in JSON format.
                    type: string
                  logAutosubscribeLevel:
                    description: LogAutosubscribeLevel specifies the default logging
                      level for the Mendix Runtime.
                    type: string
                  logLevels:
                    additionalProperties:
                      type: string
                    description: LogLevels represents configuration of node name to
                      its log level setting.
                    type: object
                  microflowConstants:
                    additionalProperties:
                      type: string
                    description: MicroflowConstants represents application constants
                      (model options in the portal). This attribute should only be
                      used in standalone mode.
                    type: object
                  mxAdminPassword:
                    description: MxAdminPassword specifies the password for the MxAdmin
                      user. If left empty, the password will be left unchanged and
                      the MxAdmin user will not be (re)-created.
                    type: string
                  myScheduledEvents:
                    description: MyScheduledEvents represents application scheduled
                      events (model options in the portal). This attribute should
                      only be used in standalone mode.
                    items:
                      type: string
                    type: array
                  runtimeLicense:
                    description: RuntimeLicense specifies the runtime license configuration.
                    properties:
                      id:
                        description: ID specifies the LicenseId (UUID associated with
                          the license) for an offline license.
                        type: string
                      key:
                        description: Key specifies the LicenseKey (the actual license)
                          for an offline license.
                        type: string
                      type:
                        description: Type specifies the license type (empty for trial
                          or no license).
                        type: string
                    type: object
                  scheduledEventExecution:
                    description: ScheduledEventExecution represents scheduled event
                      execution (SPECIFIED/ALL/NONE). This attribute should only be
                      used in standalone mode.
                    type: string
                type: object
              runtimeDeploymentPodAnnotations:
                additionalProperties:
                  type: string
                description: RuntimeDeploymentPodAnnotations is deployment annotations
                  for the `master` and `worker` deployments. Merges with the same
                  field in the OperatorConfiguration CR, OperatorConfiguration has
                  lower priority.
                type: object
              runtimeMetricsConfiguration:
                description: RuntimeMetricsConfiguration specifies the configuration
                  for collecting Prometheus metrics from the Mendix Runtime. Non-empty
                  values override values from OperatorConfiguration CR.
                properties:
                  interval:
                    description: StepInterval specifies a custom step for windowed
                      statistics such as max. This should be aligned with your Prometheus
                      scrape interval (1 minute by default) and can be left empty.
                      This value is only used when using the native scraping mode.
                      The value should be provided in ISO 8601 Duration format (e.g.
                      'PT1M').
                    type: string
                  mode:
                    description: Mode specifies the metrics mode to use (native or
                      compatibility). If left empty, metrics will not be collected.
                    type: string
                  mxAgentConfig:
                    description: 'MxAgentConfig specifies a configuration for MxAgent,
                      a Mendix Java instrumentation agent. This parameter works exactly
                      like `METRICS_AGENT_CONFIG` in CF Buildpack and Mendix Cloud
                      V4. Specifying a non-empty MxAgentConfig will enable collection
                      of additional metrics in Mendix Runtime 9.7 and later versions.
                      Warning: a future version of the Mendix Runtime will replace
                      MxAgent with a native tracing feature, and MxAgent is expected
                      to be deprecated in Mendix 10.'
                    type: string
                  mxAgentInstrumentationConfig:
                    description: 'MxAgentInstrumentationConfig specifies instrumentation
                      configuration for MxAgent, a Mendix Java instrumentation agent.
                      This parameter works exactly like `METRICS_AGENT_INSTRUMENTATION_CONFIG`
                      in CF Buildpack and Mendix Cloud V4. Specifying a non-empty
                      MxAgentInstrumentationConfig will use a custom instrumentation
                      config instead of the MxAgent configuration. This parameter
                      is only used when MxAgentConfig is not empty. Warning: a future
                      version of the Mendix Runtime will replace MxAgent with a native
                      tracing feature, and MxAgent is expected to be deprecated in
                      Mendix 10.'
                    type: string
                type: object
              serviceAnnotations:
                additionalProperties:
                  type: string
                description: ServiceAnnotations annotations for the service. Supports
                  templates.
                type: object
              sourceURL:
                description: SourceURL specifies the HTTP(S) URL where the app source
                  (e.g. MDA) can be downloaded so that it can be added to the image.
                type: string
              sourceVersion:
                description: SourceVersion specifies the version of the source. In
                  most cases this will be provided by Portunus. Can be used as templated
                  parameter of `imageNameTemplate`.
                type: string
              storage:
                description: Storage specifies the file storage instance configuration.
                properties:
                  serviceClass:
                    type: string
                  servicePlan:
                    type: string
                type: object
              tls:
                description: TLS configures app's Ingress or Route TLS. If this is
                  not specified, the Endpoint will use the default TLS configuration
                  from OperatorConfiguration.
                properties:
                  certificate:
                    description: Certificate specifies the TLS encryption certificate
                      value in plaintext PEM format. Requires Key to be provided as
                      well. Cannot be used together with SecretName.
                    type: string
                  enableTLS:
                    description: EnableTLS specifies if TLS should be enabled.
                    type: boolean
                  key:
                    description: Key specifies the TLS encryption private key value
                      in plaintext PEM format. Requires Certificate to be provided
                      as well. Cannot be used together with SecretName.
                    type: string
                  secretName:
                    description: SecretName specifies the name of the secret containing
                      TLS keys. Can be left empty to use the default secret, or to
                      provide the secret through Key and Certificate.
                    type: string
                required:
                - enableTLS
                type: object
            required:
            - mendixRuntimeVersion
            - replicas
            - sourceURL
            type: object
          status:
            description: MendixAppStatus defines the observed state of MendixApp
            properties:
              appURL:
                type: string
              buildStatus:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
              databaseStatus:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
              deployedSourceURL:
                type: string
              endpointStatus:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
              labelSelector:
                description: LabelSelector provides the Pod label selector, used for
                  pod autoscaling.
                type: string
              licenseStatus:
                description: LicenseStatus defines the license status of a MendixApp
                properties:
                  expires:
                    format: date-time
                    type: string
                  licenseID:
                    type: string
                  mode:
                    description: LicenseMode is the license mode of a Mendix App.
                    type: string
                type: object
              readyReplicas:
                format: int32
                type: integer
              replicaStatuses:
                items:
                  description: ReplicaStatus represents the status of a given replica
                    within a runtime deployment.
                  properties:
                    lastError:
                      type: string
                    licenseStatus:
                      properties:
                        licenseID:
                          type: string
                        licenseType:
                          type: string
                        runtimeMode:
                          type: string
                      type: object
                    replicaName:
                      type: string
                    runtimeStatus:
                      type: string
                  type: object
                type: array
              replicas:
                description: Replicas provides the number of replicas assigned to
                  the app, used for pod autoscaling.
                format: int32
                type: integer
              runtimeStatus:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
              statusCounter:
                format: int64
                type: integer
              storageStatus:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
            required:
            - readyReplicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.labelSelector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_operatorconfigurations.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: operatorconfigurations.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: OperatorConfiguration
    listKind: OperatorConfigurationList
    plural: operatorconfigurations
    singular: operatorconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OperatorConfiguration is the Schema for the operatorconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorConfigurationSpec defines the desired state of OperatorConfiguration
            properties:
              buildCustomCASecretName:
                description: DEPRECATED - This attribute is being replaced with other
                  configuration options. BuildCustomCASecretName is secret name of
                  a secret that has custom.crt key containing the registryâ€™s root
                  CA.
                type: string
              buildProxySecretName:
                type: string
              buildResources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              buildRuntimeBaseImage:
                description: BuildRuntimeBaseImage it the templatized name of the
                  runtime base image used to build Mendix app images.
                type: string
              builderImage:
                type: string
              builderServiceAccount:
                type: string
              dockerfile:
                description: DEPRECATED - This attribute is being replaced with other
                  configuration options. Dockerfile defines the HTTP(S) URL where
                  the Dockerfile can be downloaded to build the image.
                type: string
              endpoint:
                description: EndpointConfigurationSpec defines the configuration for
                  an Endpoint
                properties:
                  ingress:
                    description: Ingress specifies the default configuration for Ingress
                      objects.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies the annotations which should
                          be added to an Ingress or OpenShift Route.
                        type: object
                      domain:
                        description: Domain will be used to generate an AppURL if
                          no AppURL is provided. It's not used when the AppURL is
                          not empty. It's can be left blank for OpenShift - in that
                          case, the default OpenShift apps domain will be used.
                        type: string
                      enableTLS:
                        description: EnableTLS specifies if TLS should be enabled.
                        type: boolean
                      ingressClassName:
                        description: IngressClassName specifies IngressClassName for
                          ingress. MendixApp IngressClassName has higher priority.
                        type: string
                      path:
                        description: Path ingress default path value. By default (or
                          when empty), it uses "/" value. E.g. Google Cloud requires
                          "/*" value. Can be overwritten in MendixApp CRD.
                        type: string
                      pathType:
                        description: PathType ingress pathType. By default, it's empty
                          and not presented in the ingress object. Can be overwritten
                          in MendixApp CRD.
                        type: string
                      tlsSecretName:
                        description: TLSSecretName specifies the name of the secret
                          containing TLS keys. Can be left empty to use the default
                          secret, or to provide the secret through Key and Certificate.
                        type: string
                    required:
                    - enableTLS
                    type: object
                  openshiftRoute:
                    description: OpenshiftRoute specifies the default configuration
                      for OpenShift Routes.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies the annotations which should
                          be added to an Ingress or OpenShift Route.
                        type: object
                      domain:
                        description: Domain will be used to generate an AppURL if
                          no AppURL is provided. It's not used when the AppURL is
                          not empty. It's can be left blank for OpenShift - in that
                          case, the default OpenShift apps domain will be used.
                        type: string
                      enableTLS:
                        description: EnableTLS specifies if TLS should be enabled.
                        type: boolean
                      tlsSecretName:
                        description: TLSSecretName specifies the name of the secret
                          containing TLS keys. Can be left empty to use the default
                          secret, or to provide the secret through Key and Certificate.
                        type: string
                    required:
                    - enableTLS
                    type: object
                  serviceAnnotations:
                    additionalProperties:
                      type: string
                    description: ServiceAnnotations annotations for the service. Supports
                      templates.
                    type: object
                  servicePorts:
                    description: ServicePorts opens specified ports in service with
                      target port "mendix-app". If empty uses 8080 port.
                    items:
                      format: int32
                      type: integer
                    type: array
                  serviceType:
                    description: ServiceType is service type. By default it equals
                      to "ClusterIP". Also supports "LoadBalancer".
                    type: string
                  type:
                    description: Type specifies the endpoint type.
                    type: string
                type: object
              licenseKeySecretName:
                type: string
              licenseManager:
                description: LicenseManager defines the URL of Private Cloud License
                  Manager server  and the authentication credentials. Its definition
                  implies that this is the licensing mechanism used by the operator.
                  Otherwise, the legacy mode will be used.
                properties:
                  credentialsSecretName:
                    description: CredentialsSecretName defines the authentication
                      credentials.
                    type: string
                  serverURL:
                    description: ServerURL defines the license manager server URL.
                    type: string
                type: object
              metricsSidecarImage:
                type: string
              metricsSidecarResources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              registry:
                description: RegistrySpec defines optional registry settings for specific
                  build
                properties:
                  credentials:
                    type: string
                  imageNameTemplate:
                    description: "ImageNameTemplate is the template used to generate
                      the image+tag, if it's not specified in OperatorConfiguration.
                      It's a go template which is used to generate the image name
                      and tag and allows to use both OpenShift-style \"repository
                      per app\" and ECR-style \"tag per app\". \n Available parameters:
                       - uses internal app name.  - uses the
                      current value of the Build CRâ€™s Generation attribute (https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/namespace#generation).
                       - uses the value of `sourceVersion` key from MendixApp
                      CR.  - uses the current UNIX timestamp, with
                      at least millisecond precision.  - uses the current
                      timestamp in the next format: \t\t\t\t\t20211231.081224.789
                      is the next date - 2021-12-31 08:12:24.789. \n Examples: * \"my-ecr-repository:\"
                      (ECR repository called my-ecr-repository, each app will be saved
                      in its own tag) * \"my-ns/\" (OpenShift repository
                      for namespace my-ns, each app will be saved in its own image)
                      * \"my-username/\" (Docker Hub repository for user
                      my-username, each app will be saved in its own image)"
                    type: string
                  pullURL:
                    type: string
                  pushURL:
                    type: string
                  type:
                    description: RegistryType represents the type of docker registry
                    type: string
                type: object
              runtimeAutomountServiceAccountToken:
                type: boolean
              runtimeDeploymentPodAnnotations:
                additionalProperties:
                  type: string
                description: RuntimeDeploymentPodAnnotations is deployment annotations
                  for the `master` and `worker` deployments. Merges with the same
                  field in the MendixApp CR, MendixApp has higher priority.
                type: object
              runtimeLivenessProbe:
                description: Probe describes a health check to be performed against
                  a container to determine whether it is alive or ready to receive
                  traffic.
                properties:
                  exec:
                    description: One and only one of the following should be specified.
                      Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: 'TCPSocket specifies an action involving a TCP port.
                      TCP hooks not yet supported TODO: implement a realistic TCP
                      lifecycle hook'
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              runtimeMetricsConfiguration:
                description: RuntimeMetricsConfiguration specifies the default configuration
                  for collecting Prometheus metrics from the Mendix Runtime. Merges
                  with the same field in the MendixApp CR, MendixApp has higher priority.
                properties:
                  interval:
                    description: StepInterval specifies a custom step for windowed
                      statistics such as max. This should be aligned with your Prometheus
                      scrape interval (1 minute by default) and can be left empty.
                      This value is only used when using the native scraping mode.
                      The value should be provided in ISO 8601 Duration format (e.g.
                      'PT1M').
                    type: string
                  mode:
                    description: Mode specifies the metrics mode to use (native or
                      compatibility). If left empty, metrics will not be collected.
                    type: string
                  mxAgentConfig:
                    description: 'MxAgentConfig specifies a configuration for MxAgent,
                      a Mendix Java instrumentation agent. This parameter works exactly
                      like `METRICS_AGENT_CONFIG` in CF Buildpack and Mendix Cloud
                      V4. Specifying a non-empty MxAgentConfig will enable collection
                      of additional metrics in Mendix Runtime 9.7 and later versions.
                      Warning: a future version of the Mendix Runtime will replace
                      MxAgent with a native tracing feature, and MxAgent is expected
                      to be deprecated in Mendix 10.'
                    type: string
                  mxAgentInstrumentationConfig:
                    description: 'MxAgentInstrumentationConfig specifies instrumentation
                      configuration for MxAgent, a Mendix Java instrumentation agent.
                      This parameter works exactly like `METRICS_AGENT_INSTRUMENTATION_CONFIG`
                      in CF Buildpack and Mendix Cloud V4. Specifying a non-empty
                      MxAgentInstrumentationConfig will use a custom instrumentation
                      config instead of the MxAgent configuration. This parameter
                      is only used when MxAgentConfig is not empty. Warning: a future
                      version of the Mendix Runtime will replace MxAgent with a native
                      tracing feature, and MxAgent is expected to be deprecated in
                      Mendix 10.'
                    type: string
                type: object
              runtimeReadinessProbe:
                description: Probe describes a health check to be performed against
                  a container to determine whether it is alive or ready to receive
                  traffic.
                properties:
                  exec:
                    description: One and only one of the following should be specified.
                      Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: 'TCPSocket specifies an action involving a TCP port.
                      TCP hooks not yet supported TODO: implement a realistic TCP
                      lifecycle hook'
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              runtimeResources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              sidecarImage:
                type: string
              sidecarResources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              trust:
                description: Trust specifies the trust certificates CA's.
                properties:
                  customCASecretName:
                    description: CustomCASecretName the secret's name that contains
                      custom.crt with additional trusted Certificate Authorities.
                    type: string
                type: object
            type: object
          status:
            description: OperatorConfigurationStatus defines the observed state of
              OperatorConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_operatorversions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: operatorversions.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: OperatorVersion
    listKind: OperatorVersionList
    plural: operatorversions
    singular: operatorversion
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OperatorVersion is the Schema for the operatorversions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorVersionSpec defines the desired state of OperatorVersion
            properties:
              versions:
                description: Versions represents the Operator's internal component
                  versions.
                properties:
                  builder_version:
                    type: string
                  metrics_sidecar_version:
                    type: string
                  operator_version:
                    type: string
                  repository_url:
                    type: string
                  sidecar_version:
                    type: string
                  storage_provisioner_version:
                    type: string
                type: object
            type: object
          status:
            description: OperatorVersionStatus defines the observed state of OperatorVersion
            properties:
              internal_details:
                description: InternalDetails represents the Operator's internal build
                  and runtime details.
                properties:
                  build_branch:
                    type: string
                  build_date:
                    type: string
                  build_hash:
                    type: string
                  operator_sdk:
                    type: string
                  runtime_go_version:
                    type: string
                type: object
              license_manager_details:
                description: LicenseManagerDetails represents the License Manager
                  details.
                properties:
                  server_url:
                    type: string
                type: object
              versions:
                description: Versions represents the Operator's internal component
                  versions.
                properties:
                  builder_version:
                    type: string
                  metrics_sidecar_version:
                    type: string
                  operator_version:
                    type: string
                  repository_url:
                    type: string
                  sidecar_version:
                    type: string
                  storage_provisioner_version:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_runtimes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: runtimes.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: Runtime
    listKind: RuntimeList
    plural: runtimes
    singular: runtime
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Runtime is the Schema for the runtimes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuntimeSpec defines the desired state of Runtime
            properties:
              automountServiceAccountToken:
                description: AutomountServiceAccountToken specifies `automountServiceAccountToken`
                  value for containers
                type: boolean
              buildGeneration:
                description: BuildGeneration specifies the Build resource Generation.
                  Changing BuildGeneration will force the app to restart with the
                  latest image version.
                format: int64
                type: integer
              databaseSecretRef:
                description: DatabaseSecretRef specifies the name of the Secret containing
                  database credentials for the environment.
                type: string
              deploymentPodAnnotations:
                additionalProperties:
                  type: string
                description: DeploymentPodAnnotations is deployment annotations for
                  the `master` and `worker` deployments.
                type: object
              image:
                description: Image is the Mendix app container image.
                type: string
              livenessProbe:
                description: LivenessProbe specifies configuration for the liveness
                  probe.
                properties:
                  exec:
                    description: One and only one of the following should be specified.
                      Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: 'TCPSocket specifies an action involving a TCP port.
                      TCP hooks not yet supported TODO: implement a realistic TCP
                      lifecycle hook'
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              metricsConfiguration:
                description: MetricsConfiguration specifies configuration for collecting
                  Mendix Runtime metrics.
                properties:
                  interval:
                    description: StepInterval specifies a custom step for windowed
                      statistics such as max. This should be aligned with your Prometheus
                      scrape interval (1 minute by default) and can be left empty.
                      This value is only used when using the native scraping mode.
                      The value should be provided in ISO 8601 Duration format (e.g.
                      'PT1M').
                    type: string
                  mode:
                    description: Mode specifies the metrics mode to use (native or
                      compatibility). If left empty, metrics will not be collected.
                    type: string
                  mxAgentConfig:
                    description: 'MxAgentConfig specifies a configuration for MxAgent,
                      a Mendix Java instrumentation agent. This parameter works exactly
                      like `METRICS_AGENT_CONFIG` in CF Buildpack and Mendix Cloud
                      V4. Specifying a non-empty MxAgentConfig will enable collection
                      of additional metrics in Mendix Runtime 9.7 and later versions.
                      Warning: a future version of the Mendix Runtime will replace
                      MxAgent with a native tracing feature, and MxAgent is expected
                      to be deprecated in Mendix 10.'
                    type: string
                  mxAgentInstrumentationConfig:
                    description: 'MxAgentInstrumentationConfig specifies instrumentation
                      configuration for MxAgent, a Mendix Java instrumentation agent.
                      This parameter works exactly like `METRICS_AGENT_INSTRUMENTATION_CONFIG`
                      in CF Buildpack and Mendix Cloud V4. Specifying a non-empty
                      MxAgentInstrumentationConfig will use a custom instrumentation
                      config instead of the MxAgent configuration. This parameter
                      is only used when MxAgentConfig is not empty. Warning: a future
                      version of the Mendix Runtime will replace MxAgent with a native
                      tracing feature, and MxAgent is expected to be deprecated in
                      Mendix 10.'
                    type: string
                type: object
              metricsSidecarImage:
                description: SidecarImage specifies the `m2ee-metrics` sidecar container
                  image. Only used when Runtime metrics mode is set to compatibility.
                type: string
              metricsSidecarResources:
                description: Resources specifies the `m2ee-metrics` sidecar container
                  resource requests and requirements. Only used when Runtime metrics
                  mode is set to compatibility.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              readinessProbe:
                description: ReadinessProbe specifies configuration for the liveness
                  probe.
                properties:
                  exec:
                    description: One and only one of the following should be specified.
                      Exec specifies the action to take.
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded. Defaults to 3. Minimum
                      value is 1.
                    format: int32
                    type: integer
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP. You probably want to set "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: The header field name
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: Scheme to use for connecting to the host. Defaults
                          to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: 'Number of seconds after the container has started
                      before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe. Default
                      to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed. Defaults to 1. Must
                      be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: 'TCPSocket specifies an action involving a TCP port.
                      TCP hooks not yet supported TODO: implement a realistic TCP
                      lifecycle hook'
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535. Name must be an
                          IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully upon probe failure. The grace period is the duration
                      in seconds after the processes running in the pod are sent a
                      termination signal and the time when the processes are forcibly
                      halted with a kill signal. Set this value longer than the expected
                      cleanup time for your process. If this value is nil, the pod's
                      terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec. Value must
                      be non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). This is a
                      beta field and requires enabling ProbeTerminationGracePeriod
                      feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                      is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: 'Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    format: int32
                    type: integer
                type: object
              replicas:
                description: Replicas specifies the number of replicas to use. Set
                  this value to 0 to stop all replicas and stop the application.
                format: int32
                type: integer
              resources:
                description: Resources specifies the resource requests and requirements
                  for the Mendix app container.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              runtimeConfiguration:
                description: RuntimeConfiguration specifies Mendix Runtime configuration
                  options.
                properties:
                  applicationRootURL:
                    description: ApplicationRootURL specifies hostname to be used
                      in the runtime. Generated based on AppURL from the Endpoint
                      CR.
                    type: string
                  clientCertificates:
                    description: ClientCertificates specifies client certificates
                      to be used for TLS (HTTPS) connections.
                    items:
                      description: RuntimeClientCertificate contains details about
                        a client certificate that can be provided to the Mendix Runtime.
                      properties:
                        key:
                          description: Key is the certificate private key, a base64-encoded
                            PKCS12 (.pfx).
                          type: string
                        password:
                          description: Password specifies the password for the key,
                            required by the Mendix Runtime.
                          type: string
                        pinTo:
                          description: PinTo specifies the list of Mendix modules
                            or domain names which this certificate should be pinned
                            to. Leave empty to use this as the default certificate.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - password
                      type: object
                    type: array
                  customConfiguration:
                    description: CustomConfiguration specifies Custom Runtime Settings
                      The values should be provided in JSON format.
                    type: string
                  debuggerPassword:
                    description: DebuggerPassword specifies the password for mendix
                      app debugger password.
                    type: string
                  dtapMode:
                    description: DTAPMode specifies the mode for running the Mendix
                      application (Development, Test, Acceptance, Production). Always
                      set this to P in production environments.
                    type: string
                  environmentVariables:
                    description: EnvironmentVariables allows to specify custom environment
                      variables for the Mendix Runtime container. This can also be
                      used to set Java options by providing in the JAVA_TOOL_OPTIONS
                      environment variable.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  jettyOptions:
                    description: JettyOptions can be used to specify options for the
                      jetty webserver in the Mendix Runtime. The values should be
                      provided in JSON format.
                    type: string
                  logAutosubscribeLevel:
                    description: LogAutosubscribeLevel specifies the default logging
                      level for the Mendix Runtime.
                    type: string
                  logLevels:
                    additionalProperties:
                      type: string
                    description: LogLevels represents configuration of node name to
                      its log level setting.
                    type: object
                  microflowConstants:
                    additionalProperties:
                      type: string
                    description: MicroflowConstants represents application constants
                      (model options in the portal). This attribute should only be
                      used in standalone mode.
                    type: object
                  mxAdminPassword:
                    description: MxAdminPassword specifies the password for the MxAdmin
                      user. If left empty, the password will be left unchanged and
                      the MxAdmin user will not be (re)-created.
                    type: string
                  myScheduledEvents:
                    description: MyScheduledEvents represents application scheduled
                      events (model options in the portal). This attribute should
                      only be used in standalone mode.
                    items:
                      type: string
                    type: array
                  runtimeLicense:
                    description: RuntimeLicense specifies the runtime license configuration.
                    properties:
                      id:
                        description: ID specifies the LicenseId (UUID associated with
                          the license) for an offline license.
                        type: string
                      key:
                        description: Key specifies the LicenseKey (the actual license)
                          for an offline license.
                        type: string
                      type:
                        description: Type specifies the license type (empty for trial
                          or no license).
                        type: string
                    type: object
                  scheduledEventExecution:
                    description: ScheduledEventExecution represents scheduled event
                      execution (SPECIFIED/ALL/NONE). This attribute should only be
                      used in standalone mode.
                    type: string
                type: object
              sidecarImage:
                description: SidecarImage specifies the M2EE sidecar container image.
                type: string
              sidecarResources:
                description: Resources specifies the resource requests and requirements
                  for the M2EE sidecar container.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              storageSecretRef:
                description: DatabaseSecretRef specifies the name of the Secret containing
                  file storage credentials for the environment.
                type: string
              trust:
                description: Trust specifies the trust certificates CA's.
                properties:
                  customCASecretName:
                    description: CustomCASecretName the secret's name that contains
                      custom.crt with additional trusted Certificate Authorities.
                    type: string
                type: object
            required:
            - buildGeneration
            - replicas
            type: object
          status:
            description: RuntimeStatus defines the observed state of Runtime
            properties:
              configMapName:
                type: string
              labelSelector:
                description: LabelSelector provides the Pod label selector, used for
                  pod autoscaling.
                type: string
              m2EESecretName:
                type: string
              masterDeploymentName:
                type: string
              observedGeneration:
                format: int64
                type: integer
              readyReplicas:
                format: int32
                type: integer
              replicaStatuses:
                items:
                  description: ReplicaStatus represents the status of a given replica
                    within a runtime deployment.
                  properties:
                    lastError:
                      type: string
                    licenseStatus:
                      properties:
                        licenseID:
                          type: string
                        licenseType:
                          type: string
                        runtimeMode:
                          type: string
                      type: object
                    replicaName:
                      type: string
                    runtimeStatus:
                      type: string
                  type: object
                type: array
              replicas:
                description: Replicas provides the number of replicas assigned to
                  the app, used for pod autoscaling.
                format: int32
                type: integer
              sourceURL:
                type: string
              state:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
              workerDeploymentName:
                type: string
            required:
            - readyReplicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.labelSelector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_storageinstances.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: storageinstances.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: StorageInstance
    listKind: StorageInstanceList
    plural: storageinstances
    singular: storageinstance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StorageInstance is the Schema for the storageinstances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StorageInstanceSpec defines the desired state of StorageInstance
            properties:
              class:
                type: string
              plan:
                type: string
              trust:
                description: Trust specifies the trust certificates CA's.
                properties:
                  customCASecretName:
                    description: CustomCASecretName the secret's name that contains
                      custom.crt with additional trusted Certificate Authorities.
                    type: string
                type: object
              type:
                description: StorageType is the type of Storage (database, blob files
                  etc.).
                type: string
            type: object
          status:
            description: StorageInstanceStatus defines the observed state of StorageInstance
            properties:
              class:
                type: string
              plan:
                type: string
              secretName:
                type: string
              state:
                description: ResourceStatus defines the observed state of a resource
                properties:
                  explanation:
                    type: string
                  state:
                    description: ResourceState is the state of a resource provisioned
                      for a Mendix App.
                    type: string
                type: object
              type:
                description: StorageType is the type of Storage (database, blob files
                  etc.).
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: mx-privatecloud-operator-crd/templates/privatecloud.mendix.com_storageplans.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: storageplans.privatecloud.mendix.com
spec:
  group: privatecloud.mendix.com
  names:
    kind: StoragePlan
    listKind: StoragePlanList
    plural: storageplans
    singular: storageplan
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StoragePlan is the Schema for the storageplans API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StoragePlanSpec defines the desired state of StoragePlan
            properties:
              create:
                description: ProvisionerCreateSpec defines configuration for the pod
                  used to create the storage instance.
                properties:
                  args:
                    items:
                      type: string
                    type: array
                  command:
                    items:
                      type: string
                    type: array
                  credentialsSecretName:
                    type: string
                  image:
                    type: string
                  instanceNameTemplate:
                    type: string
                  proxySecretName:
                    type: string
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAccountName:
                    type: string
                type: object
              delete:
                description: ProvisionerSpec defines configuration for the pod used
                  to manage the storage instance.
                properties:
                  args:
                    items:
                      type: string
                    type: array
                  command:
                    items:
                      type: string
                    type: array
                  credentialsSecretName:
                    type: string
                  image:
                    type: string
                  proxySecretName:
                    type: string
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAccountName:
                    type: string
                type: object
              provisioner:
                description: StorageProvisionerType defines the provider type used
                  to provision the plan.
                type: string
              type:
                description: StoragePlanSpecType is the type of StoragePlanSpec dedicated
                  or on demand
                type: string
            required:
            - create
            - delete
            - type
            type: object
          status:
            description: StoragePlanStatus defines the observed state of StoragePlan
            properties:
              storageInstances:
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

